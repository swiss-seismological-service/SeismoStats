import numpy as np
from numpy.testing import assert_allclose, assert_equal

from seismostats.analysis.estimate_mc import empirical_cdf, estimate_mc


def test_empirical_cdf():
    sample = np.array(
        [
            0.8839698,
            0.98729853,
            0.01606361,
            0.20449985,
            0.64555887,
            0.51067202,
            0.21032875,
            0.30893407,
            0.01760724,
            0.64488555,
            0.52866666,
            0.6113724,
            0.29912548,
            0.88983565,
            0.71962906,
            0.95291164,
            0.39710704,
            0.9886478,
            0.45248849,
            0.72807291,
            0.34412639,
            0.91615602,
            0.06441641,
            0.00929412,
            0.47726263,
            0.47025982,
            0.03163823,
            0.91309795,
            0.93026383,
            0.51430296,
            0.54332513,
            0.55325218,
            0.84463611,
            0.91730252,
            0.2446928,
            0.90675099,
            0.68900707,
            0.72307647,
            0.29659387,
            0.5286394,
            0.17295367,
            0.38877039,
            0.00549466,
            0.15884389,
            0.76630311,
            0.51640171,
            0.67863794,
            0.0685186,
            0.86879564,
            0.38891402,
        ]
    )

    xs = np.array(
        [
            0.00549466,
            0.00929412,
            0.01606361,
            0.01760724,
            0.03163823,
            0.06441641,
            0.0685186,
            0.15884389,
            0.17295367,
            0.20449985,
            0.21032875,
            0.2446928,
            0.29659387,
            0.29912548,
            0.30893407,
            0.34412639,
            0.38877039,
            0.38891402,
            0.39710704,
            0.45248849,
            0.47025982,
            0.47726263,
            0.51067202,
            0.51430296,
            0.51640171,
            0.5286394,
            0.52866666,
            0.54332513,
            0.55325218,
            0.6113724,
            0.64488555,
            0.64555887,
            0.67863794,
            0.68900707,
            0.71962906,
            0.72307647,
            0.72807291,
            0.76630311,
            0.84463611,
            0.86879564,
            0.8839698,
            0.88983565,
            0.90675099,
            0.91309795,
            0.91615602,
            0.91730252,
            0.93026383,
            0.95291164,
            0.98729853,
            0.9886478,
        ]
    )

    ys = np.array(
        [
            0.02,
            0.04,
            0.06,
            0.08,
            0.1,
            0.12,
            0.14,
            0.16,
            0.18,
            0.2,
            0.22,
            0.24,
            0.26,
            0.28,
            0.3,
            0.32,
            0.34,
            0.36,
            0.38,
            0.4,
            0.42,
            0.44,
            0.46,
            0.48,
            0.5,
            0.52,
            0.54,
            0.56,
            0.58,
            0.6,
            0.62,
            0.64,
            0.66,
            0.68,
            0.7,
            0.72,
            0.74,
            0.76,
            0.78,
            0.8,
            0.82,
            0.84,
            0.86,
            0.88,
            0.9,
            0.92,
            0.94,
            0.96,
            0.98,
            1.0,
        ]
    )

    x, y = empirical_cdf(sample)

    assert_allclose(x, xs, rtol=1e-7)
    assert_allclose(y, ys, rtol=1e-7)


def test_estimate_mc():
    mags = np.array(
        [
            2.3,
            1.2,
            1.5,
            1.2,
            1.7,
            1.1,
            1.2,
            1.5,
            1.8,
            1.6,
            1.2,
            1.5,
            1.2,
            1.7,
            1.6,
            1.1,
            1.1,
            1.2,
            2.0,
            1.1,
            1.2,
            1.1,
            1.2,
            1.6,
            1.9,
            1.3,
            1.7,
            1.3,
            1.0,
            1.2,
            1.7,
            1.3,
            1.3,
            1.1,
            1.5,
            1.4,
            1.1,
            2.1,
            1.2,
            2.2,
            1.7,
            1.6,
            1.1,
            2.0,
            2.1,
            1.2,
            1.0,
            1.5,
            1.2,
            1.7,
            1.8,
            1.1,
            1.3,
            1.1,
            1.3,
            1.4,
            2.1,
            2.0,
            1.1,
            2.2,
            1.8,
            1.4,
            1.1,
            1.0,
            2.0,
            2.0,
            1.1,
            1.0,
            1.0,
            1.5,
            1.6,
            3.7,
            2.8,
            1.5,
            1.1,
            1.2,
            1.4,
            2.3,
            1.5,
            1.2,
            1.7,
            1.1,
            1.6,
            1.2,
            1.5,
            1.1,
            1.2,
            1.7,
            1.2,
            1.6,
            1.2,
            1.1,
            1.8,
            1.2,
            1.1,
            1.0,
            1.3,
            1.1,
            1.6,
            1.6,
        ]
    )

    mcs, ks_ds, ps, best_mc, beta = estimate_mc(
        mags, [0.8, 0.9, 1.0, 1.1], delta_m=0.1, p_pass=0.1
    )

    assert_equal([0.8, 0.9, 1.0, 1.1], mcs)
    assert_equal(2.242124985031149, beta)
    assert_allclose(
        [
            0.2819699492277921,
            0.21699092832299466,
            0.11605633802816911,
            0.07087102843116255,
        ],
        ks_ds,
        rtol=1e-7,
    )
    assert_allclose([0.000e00, 1.000e-04, 5.100e-02, 4.362e-01], ps, atol=0.03)
    assert_equal(1.1, best_mc)
